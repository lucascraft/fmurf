\relax 
\catcode`:\active
\catcode`;\active
\catcode`!\active
\catcode`?\active
\select@language{french}
\@writefile{toc}{\select@language{french}}
\@writefile{lof}{\select@language{french}}
\@writefile{lot}{\select@language{french}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Architecture}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Network}}{1}}
\@writefile{toc}{\contentsline {paragraph}{FMURF architecture consists in a simple application having several OSC connections in input and output. Basically it receives OSC/TUIO message on 3333 default port and emits/receive custom [/smurf/*] messages on default ports 4444 and 4445.}{1}}
\@writefile{toc}{\contentsline {paragraph}{A very convenient solution bootstraping TUIO incoming messages would be to grab TuioSimulator from TUIO.org. For more advanced prototypes it will be cool get some closest look at Reactivision and/or CCV.}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Communications}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}TUIO}{1}}
\@writefile{toc}{\contentsline {paragraph}{FMURF only uses a subset of TUIO 2D capabilities regarding fiducials (FIDs) and cursors. When connected to 3333 port, any TUIO enabled server can trigger fiducials and cursors UI event into the FMURF GUI.}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}OSC IN}{1}}
\@writefile{toc}{\contentsline {paragraph}{OSC messages are getting in on port 4444. Typically input messages are like : [/smurf/fid/\textit  {uid}/live, ff]. /smurf/live messages come with index and value format that allow to set some live data to display along with given \textit  {uid} fiducial. It is basically used to display simple frequencies on connections going from given \textit  {uid} fiducials in the GUI.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.3}OSC OUT}{2}}
\@writefile{toc}{\contentsline {paragraph}{OSC messages going out on default 4445 port consists in patterns like : [/smurf/fid/*] and [/smurf/cursor/*] . Indeed CRUD lifecycle is deduced from TUIO messages for both fiducials and cursors.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.4}Fiducials}{2}}
\@writefile{toc}{\contentsline {paragraph}{Fiducials have four differents messages : ADD, REMOVE, UPDATE and BANG}{2}}
\@writefile{toc}{\contentsline {paragraph}{The three OSC float parameters respectively define X, Y and Angle values of the given \textit  {uid} fiducial. }{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.5}Cursors}{2}}
\@writefile{toc}{\contentsline {paragraph}{Cursors have three differents messages : ADD, REMOVE and UPDATE}{2}}
\@writefile{toc}{\contentsline {paragraph}{The two OSC float parameters respectively define X, Y values of the given \textit  {uid} cursor. }{2}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Configuration}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Credits}{3}}
\@writefile{toc}{\contentsline {paragraph}{FMURF heavily relies on openframeworks.cc C++ library. It uses TUIO and OSC protocols to connect to other 3rd party applications such as Puredata, Max/MSP, Csound, etc ...}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Appendix A}{3}}
